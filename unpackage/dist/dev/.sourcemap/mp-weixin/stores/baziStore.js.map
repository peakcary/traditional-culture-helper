{"version":3,"file":"baziStore.js","sources":["stores/baziStore.js"],"sourcesContent":["/**\n * 八字数据状态管理 - Pinia Store\n * 管理八字计算结果、历史记录等数据\n */\n\nimport { defineStore } from 'pinia'\nimport { ref, computed } from 'vue'\n\nexport const useBaziStore = defineStore('bazi', () => {\n  // 状态 (使用 ref)\n  const currentBaziData = ref(null)\n  const baziHistory = ref([])\n  const isCalculating = ref(false)\n  \n  // 计算属性 (使用 computed)\n  const hasCurrentData = computed(() => currentBaziData.value !== null)\n  \n  const historyCount = computed(() => baziHistory.value.length)\n  \n  const latestHistory = computed(() => {\n    return baziHistory.value.slice(0, 5) // 最近5条记录\n  })\n  \n  // 操作方法 (Actions)\n  const setBaziData = (data) => {\n    currentBaziData.value = data\n    \n    // 自动保存到历史记录\n    if (data) {\n      addToHistory(data)\n    }\n  }\n  \n  const addToHistory = (data) => {\n    const historyItem = {\n      id: Date.now(),\n      data: { ...data },\n      timestamp: new Date(),\n      title: generateHistoryTitle(data)\n    }\n    \n    // 检查是否已存在相同数据，避免重复\n    const exists = baziHistory.value.some(item => \n      item.data.baziString?.join('') === data.baziString?.join('')\n    )\n    \n    if (!exists) {\n      baziHistory.value.unshift(historyItem)\n      \n      // 限制历史记录数量，保留最新50条\n      if (baziHistory.value.length > 50) {\n        baziHistory.value = baziHistory.value.slice(0, 50)\n      }\n      \n      // 保存到本地存储\n      saveHistoryToStorage()\n    }\n  }\n  \n  const removeFromHistory = (id) => {\n    const index = baziHistory.value.findIndex(item => item.id === id)\n    if (index !== -1) {\n      baziHistory.value.splice(index, 1)\n      saveHistoryToStorage()\n    }\n  }\n  \n  const clearHistory = () => {\n    baziHistory.value = []\n    uni.removeStorageSync('bazi_history')\n  }\n  \n  const loadHistoryFromStorage = () => {\n    try {\n      const stored = uni.getStorageSync('bazi_history')\n      if (stored) {\n        baziHistory.value = JSON.parse(stored).map(item => ({\n          ...item,\n          timestamp: new Date(item.timestamp)\n        }))\n      }\n    } catch (error) {\n      console.error('加载历史记录失败:', error)\n    }\n  }\n  \n  const saveHistoryToStorage = () => {\n    try {\n      uni.setStorageSync('bazi_history', JSON.stringify(baziHistory.value))\n    } catch (error) {\n      console.error('保存历史记录失败:', error)\n    }\n  }\n  \n  const generateHistoryTitle = (data) => {\n    if (!data || !data.pillars) return '未知记录'\n    \n    const { year, month, day, hour } = data.pillars\n    const baziStr = `${year.gan}${year.zhi} ${month.gan}${month.zhi} ${day.gan}${day.zhi} ${hour.gan}${hour.zhi}`\n    const gender = data.gender || '未知'\n    \n    return `${gender}命 ${baziStr}`\n  }\n  \n  const setCalculating = (status) => {\n    isCalculating.value = status\n  }\n  \n  // 初始化，从本地存储加载历史记录\n  const init = () => {\n    loadHistoryFromStorage()\n  }\n  \n  // 返回响应式状态和方法\n  return {\n    // 状态\n    currentBaziData,\n    baziHistory,\n    isCalculating,\n    \n    // 计算属性\n    hasCurrentData,\n    historyCount,\n    latestHistory,\n    \n    // 方法\n    setBaziData,\n    addToHistory,\n    removeFromHistory,\n    clearHistory,\n    setCalculating,\n    init\n  }\n})"],"names":["defineStore","ref","computed","uni"],"mappings":"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"}