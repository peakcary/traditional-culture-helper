{"version":3,"file":"bazi-calculator.js","sources":["utils/bazi-calculator.js"],"sourcesContent":["/**\n * 八字排盘计算引擎\n * 实现完整的八字计算逻辑\n */\n\nimport CalendarConverter from './calendar.js';\n\nclass BaziCalculator {\n  constructor() {\n    // 天干\n    this.tianGan = ['甲', '乙', '丙', '丁', '戊', '己', '庚', '辛', '壬', '癸'];\n    \n    // 地支\n    this.diZhi = ['子', '丑', '寅', '卯', '辰', '巳', '午', '未', '申', '酉', '戌', '亥'];\n    \n    // 天干五行属性\n    this.ganWuXing = {\n      '甲': '木', '乙': '木',\n      '丙': '火', '丁': '火',\n      '戊': '土', '己': '土',\n      '庚': '金', '辛': '金',\n      '壬': '水', '癸': '水'\n    };\n    \n    // 地支五行属性\n    this.zhiWuXing = {\n      '子': '水', '亥': '水',\n      '寅': '木', '卯': '木',\n      '巳': '火', '午': '火',\n      '申': '金', '酉': '金',\n      '辰': '土', '戌': '土', '丑': '土', '未': '土'\n    };\n    \n    // 地支藏干\n    this.zhiCangGan = {\n      '子': ['癸'],\n      '丑': ['己', '癸', '辛'],\n      '寅': ['甲', '丙', '戊'],\n      '卯': ['乙'],\n      '辰': ['戊', '乙', '癸'],\n      '巳': ['丙', '庚', '戊'],\n      '午': ['丁', '己'],\n      '未': ['己', '丁', '乙'],\n      '申': ['庚', '壬', '戊'],\n      '酉': ['辛'],\n      '戌': ['戊', '辛', '丁'],\n      '亥': ['壬', '甲']\n    };\n    \n    // 十神关系\n    this.shiShen = {\n      '同': '比肩',\n      '劫': '劫财',\n      '食': '食神',\n      '伤': '伤官',\n      '财': '正财',\n      '才': '偏财',\n      '官': '正官',\n      '杀': '七杀',\n      '印': '正印',\n      '枭': '偏印'\n    };\n    \n    // 纳音五行表\n    this.naYin = {\n      '甲子': '海中金', '乙丑': '海中金',\n      '丙寅': '炉中火', '丁卯': '炉中火',\n      '戊辰': '大林木', '己巳': '大林木',\n      '庚午': '路旁土', '辛未': '路旁土',\n      '壬申': '剑锋金', '癸酉': '剑锋金',\n      '甲戌': '山头火', '乙亥': '山头火',\n      // ... 更多纳音对应关系\n    };\n  }\n  \n  /**\n   * 计算完整八字\n   * @param {Date} birthDate 出生日期时间\n   * @param {string} gender 性别 ('男'/'女')\n   * @param {boolean} isLunar 是否农历\n   * @returns {Object} 八字信息\n   */\n  calculateBazi(birthDate, gender = '男', isLunar = false) {\n    let year, month, day, hour;\n    \n    if (isLunar) {\n      // 农历转公历\n      const solarDate = CalendarConverter.lunarToSolar(\n        birthDate.getFullYear(),\n        birthDate.getMonth() + 1,\n        birthDate.getDate()\n      );\n      year = solarDate.year;\n      month = solarDate.month;\n      day = solarDate.day;\n      hour = birthDate.getHours();\n    } else {\n      year = birthDate.getFullYear();\n      month = birthDate.getMonth() + 1;\n      day = birthDate.getDate();\n      hour = birthDate.getHours();\n    }\n    \n    // 获取农历信息\n    const lunarInfo = CalendarConverter.solarToLunar(year, month, day);\n    \n    // 计算四柱\n    const yearPillar = this.getYearPillar(year);\n    const monthPillar = this.getMonthPillar(year, month, day);\n    const dayPillar = this.getDayPillar(year, month, day);\n    const hourPillar = this.getHourPillar(dayPillar.gan, hour);\n    \n    // 构建八字对象\n    const bazi = {\n      // 基本信息\n      birthDate: {\n        solar: { year, month, day, hour },\n        lunar: lunarInfo\n      },\n      gender,\n      \n      // 四柱信息\n      pillars: {\n        year: yearPillar,\n        month: monthPillar,\n        day: dayPillar,\n        hour: hourPillar\n      },\n      \n      // 八字字符串\n      baziString: [\n        yearPillar.gan + yearPillar.zhi,\n        monthPillar.gan + monthPillar.zhi,\n        dayPillar.gan + dayPillar.zhi,\n        hourPillar.gan + hourPillar.zhi\n      ],\n      \n      // 分析结果\n      analysis: {}\n    };\n    \n    // 进行各种分析\n    bazi.analysis = {\n      wuXing: this.analyzeWuXing(bazi),\n      shiShen: this.analyzeShiShen(bazi),\n      qiangRuo: this.analyzeQiangRuo(bazi),\n      yongShen: this.analyzeYongShen(bazi),\n      geJu: this.analyzeGeJu(bazi),\n      naYin: this.getNaYin(bazi)\n    };\n    \n    return bazi;\n  }\n  \n  /**\n   * 获取年柱\n   * @param {number} year 公历年份\n   * @returns {Object} 年柱信息\n   */\n  getYearPillar(year) {\n    // 立春作为年柱分界点，这里简化为公历年\n    const ganIndex = (year - 4) % 10;\n    const zhiIndex = (year - 4) % 12;\n    \n    return {\n      gan: this.tianGan[ganIndex],\n      zhi: this.diZhi[zhiIndex],\n      ganWuXing: this.ganWuXing[this.tianGan[ganIndex]],\n      zhiWuXing: this.zhiWuXing[this.diZhi[zhiIndex]],\n      cangGan: this.zhiCangGan[this.diZhi[zhiIndex]]\n    };\n  }\n  \n  /**\n   * 获取月柱\n   * @param {number} year 年份\n   * @param {number} month 月份\n   * @param {number} day 日期\n   * @returns {Object} 月柱信息\n   */\n  getMonthPillar(year, month, day) {\n    // 根据节气确定月柱，这里简化处理\n    const yearGanIndex = (year - 4) % 10;\n    const monthZhiIndex = (month + 1) % 12;\n    const monthGanIndex = (yearGanIndex * 2 + month) % 10;\n    \n    const gan = this.tianGan[monthGanIndex];\n    const zhi = this.diZhi[monthZhiIndex];\n    \n    return {\n      gan,\n      zhi,\n      ganWuXing: this.ganWuXing[gan],\n      zhiWuXing: this.zhiWuXing[zhi],\n      cangGan: this.zhiCangGan[zhi]\n    };\n  }\n  \n  /**\n   * 获取日柱\n   * @param {number} year 年份\n   * @param {number} month 月份  \n   * @param {number} day 日期\n   * @returns {Object} 日柱信息\n   */\n  getDayPillar(year, month, day) {\n    const ganZhi = CalendarConverter.getDayGanZhi(year, month, day);\n    const gan = ganZhi.charAt(0);\n    const zhi = ganZhi.charAt(1);\n    \n    return {\n      gan,\n      zhi,\n      ganWuXing: this.ganWuXing[gan],\n      zhiWuXing: this.zhiWuXing[zhi],\n      cangGan: this.zhiCangGan[zhi]\n    };\n  }\n  \n  /**\n   * 获取时柱\n   * @param {string} dayGan 日干\n   * @param {number} hour 小时\n   * @returns {Object} 时柱信息\n   */\n  getHourPillar(dayGan, hour) {\n    const ganZhi = CalendarConverter.getHourGanZhi(dayGan, hour);\n    const gan = ganZhi.charAt(0);\n    const zhi = ganZhi.charAt(1);\n    \n    return {\n      gan,\n      zhi,\n      ganWuXing: this.ganWuXing[gan],\n      zhiWuXing: this.zhiWuXing[zhi],\n      cangGan: this.zhiCangGan[zhi]\n    };\n  }\n  \n  /**\n   * 五行分析\n   * @param {Object} bazi 八字对象\n   * @returns {Object} 五行分析结果\n   */\n  analyzeWuXing(bazi) {\n    const wuXingCount = {\n      '木': 0, '火': 0, '土': 0, '金': 0, '水': 0\n    };\n    \n    const pillars = Object.values(bazi.pillars);\n    \n    // 统计天干五行\n    pillars.forEach(pillar => {\n      wuXingCount[pillar.ganWuXing] += 2; // 天干权重为2\n    });\n    \n    // 统计地支五行\n    pillars.forEach(pillar => {\n      wuXingCount[pillar.zhiWuXing] += 1; // 地支权重为1\n    });\n    \n    // 统计藏干五行\n    pillars.forEach(pillar => {\n      pillar.cangGan.forEach((gan, index) => {\n        const weight = index === 0 ? 1 : 0.5; // 本气权重1，杂气权重0.5\n        wuXingCount[this.ganWuXing[gan]] += weight;\n      });\n    });\n    \n    // 计算五行强弱\n    const total = Object.values(wuXingCount).reduce((sum, count) => sum + count, 0);\n    const wuXingPercent = {};\n    const wuXingLevel = {};\n    \n    Object.keys(wuXingCount).forEach(wx => {\n      wuXingPercent[wx] = ((wuXingCount[wx] / total) * 100).toFixed(1);\n      \n      if (wuXingCount[wx] >= total * 0.3) wuXingLevel[wx] = '旺';\n      else if (wuXingCount[wx] >= total * 0.2) wuXingLevel[wx] = '强';\n      else if (wuXingCount[wx] >= total * 0.1) wuXingLevel[wx] = '平';\n      else if (wuXingCount[wx] > 0) wuXingLevel[wx] = '弱';\n      else wuXingLevel[wx] = '无';\n    });\n    \n    return {\n      count: wuXingCount,\n      percent: wuXingPercent,\n      level: wuXingLevel,\n      strongest: Object.keys(wuXingCount).reduce((a, b) => \n        wuXingCount[a] > wuXingCount[b] ? a : b\n      ),\n      weakest: Object.keys(wuXingCount).reduce((a, b) => \n        wuXingCount[a] < wuXingCount[b] ? a : b\n      )\n    };\n  }\n  \n  /**\n   * 十神分析\n   * @param {Object} bazi 八字对象\n   * @returns {Object} 十神分析结果\n   */\n  analyzeShiShen(bazi) {\n    const dayGan = bazi.pillars.day.gan;\n    const shiShenResult = {};\n    \n    // 分析各柱与日干的十神关系\n    Object.keys(bazi.pillars).forEach(position => {\n      const pillar = bazi.pillars[position];\n      if (position === 'day') return;\n      \n      shiShenResult[position] = {\n        gan: this.getShiShenRelation(dayGan, pillar.gan),\n        zhi: this.getShiShenRelation(dayGan, pillar.cangGan[0])\n      };\n    });\n    \n    return shiShenResult;\n  }\n  \n  /**\n   * 获取十神关系\n   * @param {string} dayGan 日干\n   * @param {string} targetGan 目标干\n   * @returns {string} 十神关系\n   */\n  getShiShenRelation(dayGan, targetGan) {\n    const dayWX = this.ganWuXing[dayGan];\n    const targetWX = this.ganWuXing[targetGan];\n    const isSameYinYang = (this.tianGan.indexOf(dayGan) % 2) === \n                         (this.tianGan.indexOf(targetGan) % 2);\n    \n    // 根据五行关系和阴阳属性判断十神\n    if (dayWX === targetWX) {\n      return dayGan === targetGan ? '比肩' : (isSameYinYang ? '比肩' : '劫财');\n    }\n    \n    // 其他十神关系逻辑\n    const relations = this.getWuXingRelation(dayWX, targetWX);\n    \n    if (relations === '生我') {\n      return isSameYinYang ? '正印' : '偏印';\n    } else if (relations === '我生') {\n      return isSameYinYang ? '伤官' : '食神';\n    } else if (relations === '克我') {\n      return isSameYinYang ? '正官' : '七杀';\n    } else if (relations === '我克') {\n      return isSameYinYang ? '正财' : '偏财';\n    }\n    \n    return '未知';\n  }\n  \n  /**\n   * 获取五行生克关系\n   * @param {string} wx1 五行1\n   * @param {string} wx2 五行2\n   * @returns {string} 关系\n   */\n  getWuXingRelation(wx1, wx2) {\n    const shengRelation = {\n      '木': '火', '火': '土', '土': '金', '金': '水', '水': '木'\n    };\n    const keRelation = {\n      '木': '土', '土': '水', '水': '火', '火': '金', '金': '木'\n    };\n    \n    if (shengRelation[wx2] === wx1) return '生我';\n    if (shengRelation[wx1] === wx2) return '我生';\n    if (keRelation[wx2] === wx1) return '克我';\n    if (keRelation[wx1] === wx2) return '我克';\n    \n    return '无关';\n  }\n  \n  /**\n   * 分析日主强弱\n   * @param {Object} bazi 八字对象\n   * @returns {Object} 强弱分析\n   */\n  analyzeQiangRuo(bazi) {\n    const dayGan = bazi.pillars.day.gan;\n    const dayWX = this.ganWuXing[dayGan];\n    const season = this.getSeason(bazi.birthDate.solar.month);\n    \n    let strength = 0;\n    \n    // 根据月令判断得令失令\n    const seasonWX = this.getSeasonWuXing(season);\n    if (seasonWX === dayWX) strength += 3;\n    else if (this.getWuXingRelation(seasonWX, dayWX) === '生我') strength += 1;\n    else if (this.getWuXingRelation(seasonWX, dayWX) === '克我') strength -= 2;\n    \n    // 根据其他三柱的帮扶情况\n    ['year', 'month', 'hour'].forEach(pos => {\n      const pillar = bazi.pillars[pos];\n      if (this.ganWuXing[pillar.gan] === dayWX) strength += 2;\n      if (pillar.zhiWuXing === dayWX) strength += 1;\n    });\n    \n    let level;\n    if (strength >= 5) level = '极旺';\n    else if (strength >= 3) level = '偏旺';\n    else if (strength >= 1) level = '中和';\n    else if (strength >= -1) level = '偏弱';\n    else level = '极弱';\n    \n    return {\n      score: strength,\n      level,\n      analysis: `日主${dayGan}在${season}，强弱评分：${strength}，判断为${level}`\n    };\n  }\n  \n  /**\n   * 分析用神\n   * @param {Object} bazi 八字对象\n   * @returns {Object} 用神分析\n   */\n  analyzeYongShen(bazi) {\n    const qiangRuo = this.analyzeQiangRuo(bazi);\n    const wuXing = this.analyzeWuXing(bazi);\n    const dayWX = this.ganWuXing[bazi.pillars.day.gan];\n    \n    let yongShen, jiShen;\n    \n    if (qiangRuo.level.includes('旺')) {\n      // 身旺用克泄耗\n      yongShen = this.getKeLieHaoWX(dayWX);\n      jiShen = [dayWX];\n    } else if (qiangRuo.level.includes('弱')) {\n      // 身弱用生扶\n      yongShen = this.getShengFuWX(dayWX);\n      jiShen = this.getKeLieHaoWX(dayWX);\n    } else {\n      // 中和根据五行平衡调节\n      const weakest = wuXing.weakest;\n      yongShen = [weakest];\n      jiShen = [wuXing.strongest];\n    }\n    \n    return {\n      yongShen,\n      jiShen,\n      analysis: `日主${qiangRuo.level}，用神为${yongShen.join('、')}，忌神为${jiShen.join('、')}`\n    };\n  }\n  \n  /**\n   * 格局分析\n   * @param {Object} bazi 八字对象\n   * @returns {Object} 格局分析\n   */\n  analyzeGeJu(bazi) {\n    // 简化的格局判断\n    const shiShen = this.analyzeShiShen(bazi);\n    const monthSS = shiShen.month?.gan || '未知';\n    \n    const commonFormats = {\n      '正官': '正官格',\n      '七杀': '七杀格',\n      '正财': '正财格',\n      '偏财': '偏财格',\n      '食神': '食神格',\n      '伤官': '伤官格'\n    };\n    \n    const geJu = commonFormats[monthSS] || '普通格局';\n    \n    return {\n      name: geJu,\n      description: `以月令${monthSS}为主的${geJu}`,\n      level: '中等'\n    };\n  }\n  \n  /**\n   * 纳音分析\n   * @param {Object} bazi 八字对象\n   * @returns {Object} 纳音信息\n   */\n  getNaYin(bazi) {\n    const result = {};\n    \n    Object.keys(bazi.pillars).forEach(pos => {\n      const pillar = bazi.pillars[pos];\n      const ganZhi = pillar.gan + pillar.zhi;\n      result[pos] = this.naYin[ganZhi] || '未知纳音';\n    });\n    \n    return result;\n  }\n  \n  // 辅助方法\n  getSeason(month) {\n    if ([3, 4, 5].includes(month)) return '春';\n    if ([6, 7, 8].includes(month)) return '夏';\n    if ([9, 10, 11].includes(month)) return '秋';\n    return '冬';\n  }\n  \n  getSeasonWuXing(season) {\n    const seasonWX = { '春': '木', '夏': '火', '秋': '金', '冬': '水' };\n    return seasonWX[season];\n  }\n  \n  getKeLieHaoWX(wuXing) {\n    const relations = {\n      '木': ['金', '火', '土'],\n      '火': ['水', '土', '金'],\n      '土': ['木', '金', '水'],\n      '金': ['火', '水', '木'],\n      '水': ['土', '木', '火']\n    };\n    return relations[wuXing] || [];\n  }\n  \n  getShengFuWX(wuXing) {\n    const relations = {\n      '木': ['水', '木'],\n      '火': ['木', '火'],\n      '土': ['火', '土'],\n      '金': ['土', '金'],\n      '水': ['金', '水']\n    };\n    return relations[wuXing] || [];\n  }\n}\n\n// 导出单例\nexport default new BaziCalculator();"],"names":["CalendarConverter"],"mappings":";;AAOA,MAAM,eAAe;AAAA,EACnB,cAAc;AAEZ,SAAK,UAAU,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AAGhE,SAAK,QAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AAGxE,SAAK,YAAY;AAAA,MACf,KAAK;AAAA,MAAK,KAAK;AAAA,MACf,KAAK;AAAA,MAAK,KAAK;AAAA,MACf,KAAK;AAAA,MAAK,KAAK;AAAA,MACf,KAAK;AAAA,MAAK,KAAK;AAAA,MACf,KAAK;AAAA,MAAK,KAAK;AAAA,IACrB;AAGI,SAAK,YAAY;AAAA,MACf,KAAK;AAAA,MAAK,KAAK;AAAA,MACf,KAAK;AAAA,MAAK,KAAK;AAAA,MACf,KAAK;AAAA,MAAK,KAAK;AAAA,MACf,KAAK;AAAA,MAAK,KAAK;AAAA,MACf,KAAK;AAAA,MAAK,KAAK;AAAA,MAAK,KAAK;AAAA,MAAK,KAAK;AAAA,IACzC;AAGI,SAAK,aAAa;AAAA,MAChB,KAAK,CAAC,GAAG;AAAA,MACT,KAAK,CAAC,KAAK,KAAK,GAAG;AAAA,MACnB,KAAK,CAAC,KAAK,KAAK,GAAG;AAAA,MACnB,KAAK,CAAC,GAAG;AAAA,MACT,KAAK,CAAC,KAAK,KAAK,GAAG;AAAA,MACnB,KAAK,CAAC,KAAK,KAAK,GAAG;AAAA,MACnB,KAAK,CAAC,KAAK,GAAG;AAAA,MACd,KAAK,CAAC,KAAK,KAAK,GAAG;AAAA,MACnB,KAAK,CAAC,KAAK,KAAK,GAAG;AAAA,MACnB,KAAK,CAAC,GAAG;AAAA,MACT,KAAK,CAAC,KAAK,KAAK,GAAG;AAAA,MACnB,KAAK,CAAC,KAAK,GAAG;AAAA,IACpB;AAGI,SAAK,UAAU;AAAA,MACb,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACX;AAGI,SAAK,QAAQ;AAAA,MACX,MAAM;AAAA,MAAO,MAAM;AAAA,MACnB,MAAM;AAAA,MAAO,MAAM;AAAA,MACnB,MAAM;AAAA,MAAO,MAAM;AAAA,MACnB,MAAM;AAAA,MAAO,MAAM;AAAA,MACnB,MAAM;AAAA,MAAO,MAAM;AAAA,MACnB,MAAM;AAAA,MAAO,MAAM;AAAA;AAAA,IAEzB;AAAA,EACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASD,cAAc,WAAW,SAAS,KAAK,UAAU,OAAO;AACtD,QAAI,MAAM,OAAO,KAAK;AAEtB,QAAI,SAAS;AAEX,YAAM,YAAYA,eAAAA,kBAAkB;AAAA,QAClC,UAAU,YAAa;AAAA,QACvB,UAAU,SAAQ,IAAK;AAAA,QACvB,UAAU,QAAS;AAAA,MAC3B;AACM,aAAO,UAAU;AACjB,cAAQ,UAAU;AAClB,YAAM,UAAU;AAChB,aAAO,UAAU;IACvB,OAAW;AACL,aAAO,UAAU;AACjB,cAAQ,UAAU,SAAU,IAAG;AAC/B,YAAM,UAAU;AAChB,aAAO,UAAU;IAClB;AAGD,UAAM,YAAYA,eAAAA,kBAAkB,aAAa,MAAM,OAAO,GAAG;AAGjE,UAAM,aAAa,KAAK,cAAc,IAAI;AAC1C,UAAM,cAAc,KAAK,eAAe,MAAM,OAAO,GAAG;AACxD,UAAM,YAAY,KAAK,aAAa,MAAM,OAAO,GAAG;AACpD,UAAM,aAAa,KAAK,cAAc,UAAU,KAAK,IAAI;AAGzD,UAAM,OAAO;AAAA;AAAA,MAEX,WAAW;AAAA,QACT,OAAO,EAAE,MAAM,OAAO,KAAK,KAAM;AAAA,QACjC,OAAO;AAAA,MACR;AAAA,MACD;AAAA;AAAA,MAGA,SAAS;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA,QACP,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA;AAAA,MAGD,YAAY;AAAA,QACV,WAAW,MAAM,WAAW;AAAA,QAC5B,YAAY,MAAM,YAAY;AAAA,QAC9B,UAAU,MAAM,UAAU;AAAA,QAC1B,WAAW,MAAM,WAAW;AAAA,MAC7B;AAAA;AAAA,MAGD,UAAU,CAAE;AAAA,IAClB;AAGI,SAAK,WAAW;AAAA,MACd,QAAQ,KAAK,cAAc,IAAI;AAAA,MAC/B,SAAS,KAAK,eAAe,IAAI;AAAA,MACjC,UAAU,KAAK,gBAAgB,IAAI;AAAA,MACnC,UAAU,KAAK,gBAAgB,IAAI;AAAA,MACnC,MAAM,KAAK,YAAY,IAAI;AAAA,MAC3B,OAAO,KAAK,SAAS,IAAI;AAAA,IAC/B;AAEI,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,cAAc,MAAM;AAElB,UAAM,YAAY,OAAO,KAAK;AAC9B,UAAM,YAAY,OAAO,KAAK;AAE9B,WAAO;AAAA,MACL,KAAK,KAAK,QAAQ,QAAQ;AAAA,MAC1B,KAAK,KAAK,MAAM,QAAQ;AAAA,MACxB,WAAW,KAAK,UAAU,KAAK,QAAQ,QAAQ,CAAC;AAAA,MAChD,WAAW,KAAK,UAAU,KAAK,MAAM,QAAQ,CAAC;AAAA,MAC9C,SAAS,KAAK,WAAW,KAAK,MAAM,QAAQ,CAAC;AAAA,IACnD;AAAA,EACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASD,eAAe,MAAM,OAAO,KAAK;AAE/B,UAAM,gBAAgB,OAAO,KAAK;AAClC,UAAM,iBAAiB,QAAQ,KAAK;AACpC,UAAM,iBAAiB,eAAe,IAAI,SAAS;AAEnD,UAAM,MAAM,KAAK,QAAQ,aAAa;AACtC,UAAM,MAAM,KAAK,MAAM,aAAa;AAEpC,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA,WAAW,KAAK,UAAU,GAAG;AAAA,MAC7B,WAAW,KAAK,UAAU,GAAG;AAAA,MAC7B,SAAS,KAAK,WAAW,GAAG;AAAA,IAClC;AAAA,EACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASD,aAAa,MAAM,OAAO,KAAK;AAC7B,UAAM,SAASA,eAAAA,kBAAkB,aAAa,MAAM,OAAO,GAAG;AAC9D,UAAM,MAAM,OAAO,OAAO,CAAC;AAC3B,UAAM,MAAM,OAAO,OAAO,CAAC;AAE3B,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA,WAAW,KAAK,UAAU,GAAG;AAAA,MAC7B,WAAW,KAAK,UAAU,GAAG;AAAA,MAC7B,SAAS,KAAK,WAAW,GAAG;AAAA,IAClC;AAAA,EACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,cAAc,QAAQ,MAAM;AAC1B,UAAM,SAASA,eAAiB,kBAAC,cAAc,QAAQ,IAAI;AAC3D,UAAM,MAAM,OAAO,OAAO,CAAC;AAC3B,UAAM,MAAM,OAAO,OAAO,CAAC;AAE3B,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA,WAAW,KAAK,UAAU,GAAG;AAAA,MAC7B,WAAW,KAAK,UAAU,GAAG;AAAA,MAC7B,SAAS,KAAK,WAAW,GAAG;AAAA,IAClC;AAAA,EACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,cAAc,MAAM;AAClB,UAAM,cAAc;AAAA,MAClB,KAAK;AAAA,MAAG,KAAK;AAAA,MAAG,KAAK;AAAA,MAAG,KAAK;AAAA,MAAG,KAAK;AAAA,IAC3C;AAEI,UAAM,UAAU,OAAO,OAAO,KAAK,OAAO;AAG1C,YAAQ,QAAQ,YAAU;AACxB,kBAAY,OAAO,SAAS,KAAK;AAAA,IACvC,CAAK;AAGD,YAAQ,QAAQ,YAAU;AACxB,kBAAY,OAAO,SAAS,KAAK;AAAA,IACvC,CAAK;AAGD,YAAQ,QAAQ,YAAU;AACxB,aAAO,QAAQ,QAAQ,CAAC,KAAK,UAAU;AACrC,cAAM,SAAS,UAAU,IAAI,IAAI;AACjC,oBAAY,KAAK,UAAU,GAAG,CAAC,KAAK;AAAA,MAC5C,CAAO;AAAA,IACP,CAAK;AAGD,UAAM,QAAQ,OAAO,OAAO,WAAW,EAAE,OAAO,CAAC,KAAK,UAAU,MAAM,OAAO,CAAC;AAC9E,UAAM,gBAAgB,CAAA;AACtB,UAAM,cAAc,CAAA;AAEpB,WAAO,KAAK,WAAW,EAAE,QAAQ,QAAM;AACrC,oBAAc,EAAE,KAAM,YAAY,EAAE,IAAI,QAAS,KAAK,QAAQ,CAAC;AAE/D,UAAI,YAAY,EAAE,KAAK,QAAQ;AAAK,oBAAY,EAAE,IAAI;AAAA,eAC7C,YAAY,EAAE,KAAK,QAAQ;AAAK,oBAAY,EAAE,IAAI;AAAA,eAClD,YAAY,EAAE,KAAK,QAAQ;AAAK,oBAAY,EAAE,IAAI;AAAA,eAClD,YAAY,EAAE,IAAI;AAAG,oBAAY,EAAE,IAAI;AAAA;AAC3C,oBAAY,EAAE,IAAI;AAAA,IAC7B,CAAK;AAED,WAAO;AAAA,MACL,OAAO;AAAA,MACP,SAAS;AAAA,MACT,OAAO;AAAA,MACP,WAAW,OAAO,KAAK,WAAW,EAAE;AAAA,QAAO,CAAC,GAAG,MAC7C,YAAY,CAAC,IAAI,YAAY,CAAC,IAAI,IAAI;AAAA,MACvC;AAAA,MACD,SAAS,OAAO,KAAK,WAAW,EAAE;AAAA,QAAO,CAAC,GAAG,MAC3C,YAAY,CAAC,IAAI,YAAY,CAAC,IAAI,IAAI;AAAA,MACvC;AAAA,IACP;AAAA,EACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,eAAe,MAAM;AACnB,UAAM,SAAS,KAAK,QAAQ,IAAI;AAChC,UAAM,gBAAgB,CAAA;AAGtB,WAAO,KAAK,KAAK,OAAO,EAAE,QAAQ,cAAY;AAC5C,YAAM,SAAS,KAAK,QAAQ,QAAQ;AACpC,UAAI,aAAa;AAAO;AAExB,oBAAc,QAAQ,IAAI;AAAA,QACxB,KAAK,KAAK,mBAAmB,QAAQ,OAAO,GAAG;AAAA,QAC/C,KAAK,KAAK,mBAAmB,QAAQ,OAAO,QAAQ,CAAC,CAAC;AAAA,MAC9D;AAAA,IACA,CAAK;AAED,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,mBAAmB,QAAQ,WAAW;AACpC,UAAM,QAAQ,KAAK,UAAU,MAAM;AACnC,UAAM,WAAW,KAAK,UAAU,SAAS;AACzC,UAAM,gBAAiB,KAAK,QAAQ,QAAQ,MAAM,IAAI,MAChC,KAAK,QAAQ,QAAQ,SAAS,IAAI;AAGxD,QAAI,UAAU,UAAU;AACtB,aAAO,WAAW,YAAY,OAAQ,gBAAgB,OAAO;AAAA,IAC9D;AAGD,UAAM,YAAY,KAAK,kBAAkB,OAAO,QAAQ;AAExD,QAAI,cAAc,MAAM;AACtB,aAAO,gBAAgB,OAAO;AAAA,IACpC,WAAe,cAAc,MAAM;AAC7B,aAAO,gBAAgB,OAAO;AAAA,IACpC,WAAe,cAAc,MAAM;AAC7B,aAAO,gBAAgB,OAAO;AAAA,IACpC,WAAe,cAAc,MAAM;AAC7B,aAAO,gBAAgB,OAAO;AAAA,IAC/B;AAED,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,kBAAkB,KAAK,KAAK;AAC1B,UAAM,gBAAgB;AAAA,MACpB,KAAK;AAAA,MAAK,KAAK;AAAA,MAAK,KAAK;AAAA,MAAK,KAAK;AAAA,MAAK,KAAK;AAAA,IACnD;AACI,UAAM,aAAa;AAAA,MACjB,KAAK;AAAA,MAAK,KAAK;AAAA,MAAK,KAAK;AAAA,MAAK,KAAK;AAAA,MAAK,KAAK;AAAA,IACnD;AAEI,QAAI,cAAc,GAAG,MAAM;AAAK,aAAO;AACvC,QAAI,cAAc,GAAG,MAAM;AAAK,aAAO;AACvC,QAAI,WAAW,GAAG,MAAM;AAAK,aAAO;AACpC,QAAI,WAAW,GAAG,MAAM;AAAK,aAAO;AAEpC,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,gBAAgB,MAAM;AACpB,UAAM,SAAS,KAAK,QAAQ,IAAI;AAChC,UAAM,QAAQ,KAAK,UAAU,MAAM;AACnC,UAAM,SAAS,KAAK,UAAU,KAAK,UAAU,MAAM,KAAK;AAExD,QAAI,WAAW;AAGf,UAAM,WAAW,KAAK,gBAAgB,MAAM;AAC5C,QAAI,aAAa;AAAO,kBAAY;AAAA,aAC3B,KAAK,kBAAkB,UAAU,KAAK,MAAM;AAAM,kBAAY;AAAA,aAC9D,KAAK,kBAAkB,UAAU,KAAK,MAAM;AAAM,kBAAY;AAGvE,KAAC,QAAQ,SAAS,MAAM,EAAE,QAAQ,SAAO;AACvC,YAAM,SAAS,KAAK,QAAQ,GAAG;AAC/B,UAAI,KAAK,UAAU,OAAO,GAAG,MAAM;AAAO,oBAAY;AACtD,UAAI,OAAO,cAAc;AAAO,oBAAY;AAAA,IAClD,CAAK;AAED,QAAI;AACJ,QAAI,YAAY;AAAG,cAAQ;AAAA,aAClB,YAAY;AAAG,cAAQ;AAAA,aACvB,YAAY;AAAG,cAAQ;AAAA,aACvB,YAAY;AAAI,cAAQ;AAAA;AAC5B,cAAQ;AAEb,WAAO;AAAA,MACL,OAAO;AAAA,MACP;AAAA,MACA,UAAU,KAAK,MAAM,IAAI,MAAM,SAAS,QAAQ,OAAO,KAAK;AAAA,IAClE;AAAA,EACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,gBAAgB,MAAM;AACpB,UAAM,WAAW,KAAK,gBAAgB,IAAI;AAC1C,UAAM,SAAS,KAAK,cAAc,IAAI;AACtC,UAAM,QAAQ,KAAK,UAAU,KAAK,QAAQ,IAAI,GAAG;AAEjD,QAAI,UAAU;AAEd,QAAI,SAAS,MAAM,SAAS,GAAG,GAAG;AAEhC,iBAAW,KAAK,cAAc,KAAK;AACnC,eAAS,CAAC,KAAK;AAAA,IAChB,WAAU,SAAS,MAAM,SAAS,GAAG,GAAG;AAEvC,iBAAW,KAAK,aAAa,KAAK;AAClC,eAAS,KAAK,cAAc,KAAK;AAAA,IACvC,OAAW;AAEL,YAAM,UAAU,OAAO;AACvB,iBAAW,CAAC,OAAO;AACnB,eAAS,CAAC,OAAO,SAAS;AAAA,IAC3B;AAED,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA,UAAU,KAAK,SAAS,KAAK,OAAO,SAAS,KAAK,GAAG,CAAC,OAAO,OAAO,KAAK,GAAG,CAAC;AAAA,IACnF;AAAA,EACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,YAAY,MAAM;;AAEhB,UAAM,UAAU,KAAK,eAAe,IAAI;AACxC,UAAM,YAAU,aAAQ,UAAR,mBAAe,QAAO;AAEtC,UAAM,gBAAgB;AAAA,MACpB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,IACZ;AAEI,UAAM,OAAO,cAAc,OAAO,KAAK;AAEvC,WAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa,MAAM,OAAO,MAAM,IAAI;AAAA,MACpC,OAAO;AAAA,IACb;AAAA,EACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,SAAS,MAAM;AACb,UAAM,SAAS,CAAA;AAEf,WAAO,KAAK,KAAK,OAAO,EAAE,QAAQ,SAAO;AACvC,YAAM,SAAS,KAAK,QAAQ,GAAG;AAC/B,YAAM,SAAS,OAAO,MAAM,OAAO;AACnC,aAAO,GAAG,IAAI,KAAK,MAAM,MAAM,KAAK;AAAA,IAC1C,CAAK;AAED,WAAO;AAAA,EACR;AAAA;AAAA,EAGD,UAAU,OAAO;AACf,QAAI,CAAC,GAAG,GAAG,CAAC,EAAE,SAAS,KAAK;AAAG,aAAO;AACtC,QAAI,CAAC,GAAG,GAAG,CAAC,EAAE,SAAS,KAAK;AAAG,aAAO;AACtC,QAAI,CAAC,GAAG,IAAI,EAAE,EAAE,SAAS,KAAK;AAAG,aAAO;AACxC,WAAO;AAAA,EACR;AAAA,EAED,gBAAgB,QAAQ;AACtB,UAAM,WAAW,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AACtD,WAAO,SAAS,MAAM;AAAA,EACvB;AAAA,EAED,cAAc,QAAQ;AACpB,UAAM,YAAY;AAAA,MAChB,KAAK,CAAC,KAAK,KAAK,GAAG;AAAA,MACnB,KAAK,CAAC,KAAK,KAAK,GAAG;AAAA,MACnB,KAAK,CAAC,KAAK,KAAK,GAAG;AAAA,MACnB,KAAK,CAAC,KAAK,KAAK,GAAG;AAAA,MACnB,KAAK,CAAC,KAAK,KAAK,GAAG;AAAA,IACzB;AACI,WAAO,UAAU,MAAM,KAAK;EAC7B;AAAA,EAED,aAAa,QAAQ;AACnB,UAAM,YAAY;AAAA,MAChB,KAAK,CAAC,KAAK,GAAG;AAAA,MACd,KAAK,CAAC,KAAK,GAAG;AAAA,MACd,KAAK,CAAC,KAAK,GAAG;AAAA,MACd,KAAK,CAAC,KAAK,GAAG;AAAA,MACd,KAAK,CAAC,KAAK,GAAG;AAAA,IACpB;AACI,WAAO,UAAU,MAAM,KAAK;EAC7B;AACH;AAGA,MAAe,mBAAA,IAAI,eAAgB;;"}